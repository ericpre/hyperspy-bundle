
shallow_clone: true

environment:

  global:
    NSIS_DIR: "%USERPROFILE%\\nsis-binary-7069-2"
    MPLBACKEND: "agg"
    WP_INSTDIR: "%USERPROFILE%\\wpdir\\WinPython-%PYTHON_ARCH%\\"
    WP_EXE: "%USERPROFILE%\\wpdir\\WinPython3-%PYTHON_ARCH%bit.exe"

  matrix:

     - PYTHON: "C:\\Miniconda37"
       PYTHON_VERSION_SHORT: "37"
       PYTHON_VERSION: "3.7.2"
       PYTHON_ARCH: "32"
       WP_URL: 'https://github.com/winpython/winpython/releases/download/1.11.20190223/Winpython32-3.7.2.0.exe'
       WP_CRC: '40a80d2fba1348da785bd97ee8de4e69c554c3d9dcd632b623a0f12e3ddb5ec0'

     - PYTHON: "C:\\Miniconda37-x64"
       PYTHON_VERSION_SHORT: "37"
       PYTHON_VERSION: "3.7.2"
       PYTHON_ARCH: "64"
       WP_URL: 'https://github.com/winpython/winpython/releases/download/1.11.20190223/Winpython64-3.7.2.0.exe'
       WP_CRC: '3fb3ece2ba20fa903f15b642f5749a4517c2557788801197a981eea11ec21865'

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"
  - "ECHO %APPVEYOR_BUILD_FOLDER%"

install:
  - ps: Add-AppveyorMessage "Installing hyperspy-bundle..."
  - "%PYTHON%/Scripts/pip install ."

build: false  # Not a C# project, build stuff at the test step instead.

  # Build bundle installer for tags:
before_deploy:
  # Download WinPython installer if not cached
  - ps: Add-AppveyorMessage "Installing WinPython..."
  - "mkdir %USERPROFILE%\\wpdir"
  - ps: appveyor DownloadFile $Env:WP_URL -FileName $Env:WP_EXE
  - ps: Write-Output (Get-FileHash $Env:WP_EXE)
  - ps: if ((Get-FileHash $Env:WP_EXE).Hash -ne $Env:WP_CRC) { exit(1) }
  - ps: (& $Env:WP_EXE /VERYSILENT /DIR=$Env:WP_INSTDIR | Out-Null )
  - "ls %USERPROFILE%\\wpdir"
  - "ls %WP_INSTDIR%"

  - ps: Add-AppveyorMessage "Installing NSISBI..."
  - ps: Start-FileDownload ('https://sourceforge.net/projects/nsisbi/files/nsisbi3.04.2/nsis-binary-7069-2.zip') nsisbi.zip
  - ps: if ((Get-FileHash 'nsisbi.zip').Hash -ne '12a5cb4a0476fc38ba296095b128898cafc6fd100a598f2f02e4fadc7de5cd50') { exit(1) }
  - "7z x nsisbi.zip -o%USERPROFILE%"

  - "ls '%NSIS_DIR%'"

  # Install UAC plugin
  - ps: Add-AppveyorMessage "Installing UAC plugin..."
  - ps: Start-FileDownload ('http://nsis.sourceforge.net/mediawiki/images/8/8f/UAC.zip') UAC.zip
  - ps: if ((Get-FileHash 'UAC.zip').Hash -ne '20E3192AF5598568887C16D88DE59A52C2CE4A26E42C5FB8BEE8105DCBBD1760') { exit(1) }
  - "7z x UAC.zip -o%NSIS_DIR% -aoa"

  - "ls '%NSIS_DIR%'"

  # Install current hyperspy in WinPython
  - "%WP_INSTDIR%/scripts/env.bat"
  # Give info about python vesion and compiler used to compile the python
  - "python.exe -c \"import sys; print(sys.version)\""

  # Remove some large package to get below the NSIS 2Gb limit
  - "pip uninstall -y tensorflow tensorflow_estimator tensorflow_probability torch torchvision"

  # Use a specific branch of hyperspy on github
  #- "pip install https://github.com/francisco-dlp/hyperspy/archive/v1.4.1.zip#egg=hyperspy[all]"
  # Use a release version of hyperspy
  - "pip install hyperspy[all]"
  - "pip install start_jupyter_cm hyperspyui atomap pixstem pyxem"

  # Clean python cache (*.pyc files and __pycache__ folders) shipped with winpython
  - "pip install pycleanup"
  - "pushd %WP_INSTDIR% & pycleanup --cache & popd"

  # Custom installer step
  - ps: Add-AppveyorMessage "Creating installer..."
  - ps: 'Get-ChildItem -Recurse $Env:WP_INSTDIR | Measure-Object -Property Length -Sum'
  - "%PYTHON%/python.exe -m hspy_bundle.configure_installer %USERPROFILE%/wpdir %PYTHON_ARCH% %APPVEYOR_REPO_TAG_NAME%"
  - "\"%NSIS_DIR%/makensis.exe\" /V3 NSIS_installer_script-%PYTHON_ARCH%bit.nsi"
  - "ls"
  # Use hyperspy-bundle tag as version name
  - "SET BUNDLE_INST_NAME=HyperSpy-Bundle-%APPVEYOR_REPO_TAG_NAME%-py%PYTHON_VERSION_SHORT%-%PYTHON_ARCH%bit.exe"
  - "ren HyperSpy-Bundle-%APPVEYOR_REPO_TAG_NAME%-%PYTHON_ARCH%bit.exe %BUNDLE_INST_NAME%"

  - ps: Add-AppveyorMessage "Pushing artefacts..."
  - "appveyor PushArtifact %BUNDLE_INST_NAME%"
  # Report checksums
  - md5sum %BUNDLE_INST_NAME%
  - sha256sum %BUNDLE_INST_NAME%

  - ps: Add-AppveyorMessage "Installer created! Run tests in Winpython environment..."
  # Re-run tests in WinPython environment
  - "pip install pytest pytest-mpl pytest-qt"
  # image comparison fails with matplotlib 3.0.3
  # - "pytest --mpl --pyargs hyperspy"
  - "pytest --pyargs hyperspy"
  # FIXME the test suite hold the build
  # - "pytest --pyargs hyperspyui"
  - "pytest --pyargs atomap"
  - "pytest --pyargs pyxem"

deploy:
  provider: GitHub
  auth_token:
    #   to266:
    #secure: ptV5Dkz3pSVdjD0qRDpxJgjVlddFtleZ+B+c2X1Fg67P8OX3bHWVktRmlj6hfLhM
    #   vidartf:
    #secure: KwAfARhGEqOnZHltPB6kKu8xmnoiGSk7NMYJBIEbWvFCuVnepoPV7ZcIjUN3pUpK
    #   sem-geologist:
    #secure: RRqUkx9H5VuFNITmm+YzgB0qnqgVGPH1yrPVxb4oCD+FAjcTch2WZAiPEKn4L6w6
    #   ericpre:
    secure: ae8XsPI+vKJI9AWm0r9+ec71CIkXcnCHlNIQ57v+87hh5k1xuAAxIOi1CFKEmmZv
  artifact: /.*\.exe/  # upload installers to release assets
  draft: false
  prerelease: false
  force_update: true
  on:
    appveyor_repo_tag: true        # deploy on tag push only
